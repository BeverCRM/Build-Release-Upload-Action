name: "Build & Release & Upload CI (Reusable Workflow)"
# description: "This will build the project, create a new release, and upload the solution to Azure blob storage"

on:
  workflow_call:
    inputs:
      node-version:
        description: Node verion
        default: 16
        type: string
      msbuildtarget:
        description: Solution folder name
        default: Solution
        type: string
      delete-old-version:
        description: Delete the old version of the solution from Azure blob storage
        default: true
        type: boolean
      release-solution-package-type:
        description: Solution package type to upload to release assets (unmanaged / managed / both)
        default: managed
        type: string
        # options: [ unmanaged, managed, both ]
      azure-solution-package-type:
        description: Solution package type to upload to Azure blob storage (unmanaged / managed / both)
        default: managed
        type: string
        # options: [ unmanaged, managed, both ]

    outputs:
      solution-unique-name:
        description: Solution Unique Name
        value: ${{ jobs.main.outputs.get-solution-data }}
      solution-version:
        description: Solution Version
        value: ${{ jobs.main.outputs.get-solution-data }}
      solution-parsed-version:
        description: Solution Parsed Version
        value: ${{ jobs.main.outputs.get-solution-data }}
      release-id:
        description: Release Id
        value: ${{ jobs.main.outputs.random-number-generator }}
      release-name:
        description: Release Name
        value: ${{ jobs.main.outputs.random-number-generator }}
      release-tag-name:
        description: Release Tag Name
        value: ${{ jobs.main.outputs.random-number-generator }}
      release-url:
        description: Release Url
        value: ${{ jobs.main.outputs.random-number-generator }}
      unmanaged-zip-exists:
        description: Unmanaged Solution Exists
        value: ${{ jobs.main.outputs.unmanaged-zip-exists }}
      managed-zip-exists:
        description: Managed Solution Exists
        value: ${{ jobs.main.outputs.managed-zip-exists }}

jobs:
  main:
    name: Build & Release & Upload
    runs-on: ubuntu-latest
    
    outputs:
      solution-unique-name: ${{ steps.get-solution-data.outputs.unique-name }}
      solution-version: ${{ steps.get-solution-data.outputs.version }}
      solution-parsed-version: ${{ steps.get-solution-data.outputs.parsed-version }}
      release-id: ${{ steps.random-number-generator.outputs.random-number }}
      release-name: ${{ steps.random-number-generator.outputs.random-number }}
      release-tag-name: ${{ steps.random-number-generator.outputs.random-number }}
      release-url: ${{ steps.random-number-generator.outputs.random-number }}
      unmanaged-zip-exists: ${{ steps.unmanaged-zip-exists.outputs.info }}
      managed-zip-exists: ${{ steps.managed-zip-exists.outputs.info }}

    steps:
    - uses: actions/checkout@v3

    - name: Start ...
      run: echo Start

    - name: Show env
      run: |
        echo "GITHUB_OUTPUT: ${{ env.GITHUB_OUTPUT }}"

    - name: Show inputs
      run: |
        echo "node-version: ${{ inputs.node-version }}"
        echo "msbuildtarget: ${{ inputs.msbuildtarget }}"
        echo "delete-old-version: ${{ inputs.delete-old-version }}"
        echo "release-solution-package-type: ${{ inputs.release-solution-package-type }}"
        echo "azure-solution-package-type: ${{ inputs.azure-solution-package-type }}"

    - name: Show secrets
      run: |
        echo "GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}"
        echo "AZURE_STORAGE_ACCOUNT_NAME: ${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }}"
        echo "AZURE_STORAGE_CONTAINER_NAME: ${{ secrets.AZURE_STORAGE_CONTAINER_NAME }}"
        echo "AZURE_STORAGE_CONNECTION_STRING: ${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}"

    - name: Finish ...
      run: echo Finish
